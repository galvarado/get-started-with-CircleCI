version: 2.1

orbs: 
  slack: circleci/slack@4.9.3

executors:
  nodejs-executor:
    docker:
      - image: circleci/node:14.4.0

commands:
  print:
    description: "A simple echo"
    parameters:
      message:
        type: string
    steps:
      - run:
          name: Print a message
          command: echo Hello << parameters.message >> 

  notify-success:
    description: "Custom slack notification"
    steps:
      - slack/notify:
          event: pass
          custom: |
            {
              "text": "CircleCI job succeeded!",              
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*User*: ${CIRCLE_PROJECT_USERNAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job Number*: ${CIRCLE_BUILD_NUM}"
                    }
                  ]
                },
                 {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*: $CIRCLE_PROJECT_REPONAME"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }
  notify-error:
    description: "Custom slack notification"
    parameters:
      message:
        type: string
        default: ""
    steps:
      - slack/notify:
          event: fail
          custom: |
            {
              "text": "CircleCI job failed!",              
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                    "text": "A ${CIRCLE_JOB} job has Succeeded :white_check_mark:",
                    }
                  ]
                },
                  "type": "divider"
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*User*: ${CIRCLE_PROJECT_USERNAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job Number*: ${CIRCLE_BUILD_NUM}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*: $CIRCLE_PROJECT_REPONAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*: $CIRCLE_BRANCH"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Error*:  << parameters.message >> "
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }


     


jobs:
  build-and-push-image:
    docker:
        - image:  cimg/python:3.8.4

    steps:
        - print:
            message: "build and push"

        - notify-success
        - notify-error


  deploy-test-env:
    docker:
        - image:  cimg/python:3.8.4

    steps:
        - print:
            message: "deploying test env"
        - notify-success
        - notify-error
        
  deploy-to-staging:
    docker:
        - image:  cimg/python:3.8.4

    steps:
        - print:
            message: "deploying staging env"
        - notify-success
        - notify-error
  integration-tests:
    docker:
        - image:  cimg/python:3.8.4

    steps:
        - checkout
        - print:
            message: "running integration tests"

        - run:
              name: Run integration tests
              command: |
                  FAILING_TESTS = "Error502"
                  echo export FAILING_TESTS=\" ðŸ”´ A run-integration-tests job has failed!! "${FAILING_TESTS}" \" >> $BASH_ENV
                  bash ./.circleci/scripts/integration_test.sh
        - notify-success
        - notify-error:
            message: '$TESTS_FAIL_MESSAGE'
  acceptance-tests:
    docker:
        - image:  cimg/python:3.8.4

    steps:
        - checkout
        - print:
            message: "running acceptance tests"

        - run:
              name: Run acceptsance tests
              command: |
                  bash ./.circleci/scripts/acceptance_test.sh  
        - notify-success
        - notify-error:
            message: "Some error"

workflows:
  version: 2.1
  deploy-staging:
      jobs:
          - build-and-push-image
             
          - deploy-test-env:
              requires:
                - build-and-push-image
         
          - deploy-to-staging:
              requires:
                - build-and-push-image
             
          - integration-tests:
              requires:
                - deploy-test-env
            
          - acceptance-tests:
              requires:
                - deploy-to-staging
          
          