version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.1.0
  aws-eks: circleci/aws-eks@1.0.0
  aws-ecr: circleci/aws-ecr@8.0.0


executors:
  python3:
    docker:
      - image: 'cimg/python:3.10'

commands:
  set-aws-environment-variables:
    description: |
      Set environment variables so that they can be used in each step of a job.
      https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
    parameters:
      aws-access-key-id:
        type: string
      aws-secret-access-key:
        type: string
      aws-region:
        type: string
      aws-ecr-account-url:
        type: string
        default: ''
    steps:
      - run:
          name: Set environment variables
          command: |
            echo 'export AWS_ACCESS_KEY_ID="<< parameters.aws-access-key-id >>"' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY="<< parameters.aws-secret-access-key >>"' >> $BASH_ENV
            echo 'export AWS_REGION="<< parameters.aws-region >>"' >> $BASH_ENV
            echo 'export AWS_ECR_ACCOUNT_URL="<< parameters.aws-ecr-account-url >>"' >> $BASH_ENV
            registry_id=$(echo $AWS_ECR_ACCOUNT_URL  | awk -F '[/.]' '{print $1}')
            echo 'export AWS_ECR_REGISTRY_ID=$registry_id' >> $BASH_ENV

  deploy-services:
    parameters:
      aws-region:
        type: string
      aws-access-key-id:
        type: string
      aws-secret-access-key:
        type: string
      eks-cluster-name:
        type: string
      container-registry-url:
        type: string

    steps:
      - set-aws-environment-variables:
          aws-access-key-id: << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          aws-region: << parameters.aws-region >>
          aws-ecr-account-url: << parameters.container-registry-url >>
      - checkout
      - aws-cli/setup:
          aws-region: AWS_REGION
          profile-name: default
      - aws-ecr/ecr-login:
          account-url: AWS_ECR_ACCOUNT_URL
          profile-name: default
          region: AWS_REGION
      - aws-eks/update-kubeconfig-with-authenticator:
          install-kubectl: true
          cluster-name: << parameters.eks-cluster-name >>
          aws-region: << parameters.aws-region >>

jobs:

  deploy:
    executor: python3
    steps:

      - deploy-services:
          aws-region: '${AWS_REGION}'
          aws-access-key-id: '${AWS_ACCESS_KEY_ID}'
          aws-secret-access-key: '${AWS_SECRET_ACCESS_KEY}'
          eks-cluster-name: '${EKS_CLUSTER_NAME}'
          container-registry-url: '${CONTAINER_REGISTRY_URL}'

   
workflows:
  
  deploy-development:
    jobs:
      - deploy