version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.0
  aws-eks: circleci/aws-eks@2.1.1

executors:
  python3:
    docker:
      - image: 'cimg/python:3.10'

commands:
  set-aws-environment-variables:
    description: |
      Set environment variables so that they can be used in each step of a job.
      https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
    parameters:
      aws-access-key-id:
        type: string
      aws-secret-access-key:
        type: string
      aws-region:
        type: string
      aws-ecr-account-url:
        type: string
        default: ''
    steps:
      - run:
          name: Set environment variables
          command: |
            echo 'export AWS_ACCESS_KEY_ID="<< parameters.aws-access-key-id >>"' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY="<< parameters.aws-secret-access-key >>"' >> $BASH_ENV
            echo 'export AWS_REGION="<< parameters.aws-region >>"' >> $BASH_ENV
            echo 'export AWS_ECR_ACCOUNT_URL="<< parameters.aws-ecr-account-url >>"' >> $BASH_ENV
  
  deploy-services:
    parameters:
      aws-region:
        type: string
      aws-access-key-id:
        type: string
      aws-secret-access-key:
        type: string
      container-registry-url:
        type: string
      eks-cluster-name:
        type: string
    steps:
      - set-aws-environment-variables:
          aws-access-key-id: << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          aws-region: << parameters.aws-region >>
      - checkout
      - aws-cli/setup:
          aws-region: AWS_REGION
          profile-name: default
      - aws-eks/update-kubeconfig-with-authenticator:
          authenticator-release-tag: "v0.5.6"
          install-kubectl: true
          cluster-name: << parameters.eks-cluster-name >>
          aws-region: << parameters.aws-region >>


jobs:

  deploy-dev:
    executor: python3
    steps:
      - deploy-services:
          aws-region: '${AWS_REGION}'
          aws-access-key-id: '${P9_DEV_PRIVATE_1_AWS_ACCESS_KEY_ID}'
          aws-secret-access-key: '${P9_DEV_PRIVATE_1_AWS_SECRET_ACCESS_KEY}'
          container-registry-url: '${P9_DEV_PRIVATE_1_CONTAINER_REGISTRY_URL}'
          eks-cluster-name: '${EKS_CLUSTER_NAME}'


workflows:

  deploy-dev:
    jobs:
      - deploy-dev